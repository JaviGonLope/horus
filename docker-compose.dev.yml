version: '3'

services:
  user-simulator: 
    build: user-simulator
    env_file: user-simulator/.env
    depends_on:
      - api-server
      - log-shipper
    networks:
      - aparnet
    
  api-server:
    build: api-server
    env_file: api-server/.env
    environment:
      #todo: change syntax to 'var: val'
      PORT: 3000
      JAEGER_SERVICE_NAME: api-server
      # https://www.jaegertracing.io/docs/1.11/sampling/#client-sampling-configuration
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: 1
      # by default, jaeger-client sends traces to an agent on localhost:6832
      # override and send traces to http://tracing-backend:6832
      JAEGER_AGENT_PORT: 6832
    ports:
      # so we can send test requests
      - "3000:3000"
      # expose debug port
      - "9229:9229"
    # override the dockerfile startup command to:
    # 1) restart on file changes using nodemon
    # 2) start nodejs in debug mode and allow connections from all IPs
    command: nodemon --inspect-brk=0.0.0.0 .
    volumes:
      - ./api-server/src:/usr/src/app
    networks:
      - aparnet
    depends_on:
      - log-shipper
  log-shipper:
    build: log-shipper
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    env_file: log-shipper/.env


  jaeger-query:
    build: jaeger-query
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
      ES_SERVER_URLS: http://elasticsearch:9200
    ports:
      - "16686:16686" # provides UI
      - "16687:16687" # healthcheck
    networks:
      - aparnet
    command: wait.sh http://elasticsearch:9200 5 20 "jaeger-query"
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:5.6-alpine
    ports:
      - "9200:9200" # server listens here
      - "9300:9300"
    networks:
      - aparnet

networks:
  aparnet: